Add experimental `private(this)` visibility attribute

The `private` visibility attribute only limits access to the current module.
While `class` encapsulation [can be ensured using package modules](https://dlang.org/blog/2018/11/06/lost-in-translation-encapsulation),
some users dislike having to put classes into individual files to accomplish this.

With the `-preview=privateThis` switch, member variables can now be marked invisible outside of the
`class`, `struct` or `union` it's declared in.
Note that this feature it not accepted as part of the D language yet.

---
class C
{
    private int x;
    private(this) int y;
}

void main()
{
    auto c = new C();
    c.x++; // allowed
    c.y++; // not allowed
}
---
